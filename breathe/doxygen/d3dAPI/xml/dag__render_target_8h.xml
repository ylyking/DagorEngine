<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dag__render_target_8h" kind="file" language="C++">
    <compoundname>dag_renderTarget.h</compoundname>
    <includes local="no">util/dag_inttypes.h</includes>
    <includes local="no">generic/dag_span.h</includes>
    <includes refid="dag__resource_8h" local="no">drv/3d/dag_resource.h</includes>
    <includes refid="dag__decl_8h" local="no">drv/3d/dag_decl.h</includes>
    <includes local="no">math/dag_e3dColor.h</includes>
    <includedby refid="dag__render_pass_8h" local="no">/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderPass.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>drv/3d/dag_resource.h</label>
        <link refid="dag__resource_8h_source"/>
      </node>
      <node id="11">
        <label>math/dag_e3dColor.h</label>
      </node>
      <node id="6">
        <label>util/dag_globDef.h</label>
      </node>
      <node id="3">
        <label>generic/dag_span.h</label>
      </node>
      <node id="9">
        <label>math/dag_TMatrix4.h</label>
      </node>
      <node id="8">
        <label>math/dag_TMatrix.h</label>
      </node>
      <node id="10">
        <label>math/dag_lsbVisitor.h</label>
      </node>
      <node id="7">
        <label>util/dag_preprocessor.h</label>
      </node>
      <node id="5">
        <label>drv/3d/dag_decl.h</label>
        <link refid="dag__decl_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderTarget.h</label>
        <link refid="dag__render_target_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>util/dag_inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderTarget.h</label>
        <link refid="dag__render_target_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderPass.h</label>
        <link refid="dag__render_pass_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_render_target" prot="public">RenderTarget</innerclass>
    <innernamespace refid="namespaced3d">d3d</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="dag__render_target_8h_1a96de47a38fda09536e3a862b550d8c1d" prot="public" static="no" strong="yes">
        <type></type>
        <name>DepthAccess</name>
        <enumvalue id="dag__render_target_8h_1a96de47a38fda09536e3a862b550d8c1da5c6dc3d436504b7a65191cafe28212ee" prot="public">
          <name>RW</name>
          <briefdescription>
<para>For regular depth attachment. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dag__render_target_8h_1a96de47a38fda09536e3a862b550d8c1da5dd42e2c3b83a9658333215beadfef34" prot="public">
          <name>SampledRO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>For read-only depth attachment which can also be sampled as a texture in the same shader. IF YOU DON&apos;T NEED TO SAMPLE THE DEPTH, USE z_write=false WITH DepthAccess::RW INSTEAD. Using this state will cause HiZ decompression on some hardware and split of renderpass with flush of tile data into memory in a TBR. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Specifies the access mode for a depth attachment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderTarget.h" line="20" column="1" bodyfile="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderTarget.h" bodystart="21" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dag__render_target_8h_1a37ee2859ee04a3f5c750a5b5e3684c1d" prot="public" static="no">
        <type><ref refid="class_base_texture" kindref="compound">BaseTexture</ref></type>
        <definition>typedef BaseTexture Texture</definition>
        <argsstring></argsstring>
        <name>Texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderTarget.h" line="14" column="21" bodyfile="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderTarget.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/dag_inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;generic/dag_span.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_decl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math/dag_e3dColor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_base_texture" kindref="compound">BaseTexture</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/><ref refid="class_base_texture" kindref="compound">Texture</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>DepthAccess</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>RW,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>SampledRO</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="struct_render_target" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_render_target" kindref="compound">RenderTarget</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="struct_render_target_1a4a161583287ebfadccf0d054d6ee0b0d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*<ref refid="struct_render_target_1a4a161583287ebfadccf0d054d6ee0b0d" kindref="member">tex</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="struct_render_target_1af5a772cc1ad472fc0dc44d737c6bd197" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_render_target_1af5a772cc1ad472fc0dc44d737c6bd197" kindref="member">mip_level</ref>;<sp/></highlight></codeline>
<codeline lineno="42" refid="struct_render_target_1abbc128112606626b4a390dd23398eee3" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_render_target_1abbc128112606626b4a390dd23398eee3" kindref="member">layer</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">d3d</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy_from_current_render_target(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*to_tex);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_rt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;rt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_resource_clear_value" kindref="compound">ResourceClearValue</ref><sp/>&amp;clear_val<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_depth(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*tex,<sp/>DepthAccess<sp/>access);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_depth(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layer,<sp/>DepthAccess<sp/>access);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rt_index,<sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc,<sp/>uint8_t<sp/>level);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rt_index,<sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*,<sp/>uint8_t<sp/>level);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*t,<sp/>uint8_t<sp/>level)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_render_target()<sp/>&amp;&amp;<sp/>set_render_target(0,<sp/>t,<sp/>level);<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc,<sp/>uint8_t<sp/>level)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_render_target()<sp/>&amp;&amp;<sp/>set_render_target(0,<sp/>t,<sp/>fc,<sp/>level);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_render_target(<ref refid="struct_render_target" kindref="compound">RenderTarget</ref><sp/>depth,<sp/>DepthAccess<sp/>depth_access,<sp/>dag::ConstSpan&lt;RenderTarget&gt;<sp/>colors)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>colors.size()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>Driver3dRenderTarget::MAX_SIMRT;<sp/>++i)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>set_render_target(i,<sp/>colors[i].tex,<sp/>colors[i].mip_level);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>Driver3dRenderTarget::MAX_SIMRT;<sp/>++i)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>set_render_target(i,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>set_depth(depth.<ref refid="struct_render_target_1a4a161583287ebfadccf0d054d6ee0b0d" kindref="member">tex</ref>,<sp/>depth_access);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_render_target(<ref refid="struct_render_target" kindref="compound">RenderTarget</ref><sp/>depth,<sp/>DepthAccess<sp/>depth_access,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;RenderTarget&gt;<sp/>colors)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>set_render_target(depth,<sp/>depth_access,<sp/>dag::ConstSpan&lt;RenderTarget&gt;(colors.begin(),<sp/>colors.end()<sp/>-<sp/>colors.begin()));</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_render_target(<ref refid="struct_driver3d_render_target" kindref="compound">Driver3dRenderTarget</ref><sp/>&amp;out_rt);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_driver3d_render_target" kindref="compound">Driver3dRenderTarget</ref><sp/>&amp;rt);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_target_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;h);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_render_target_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;h,<sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*rt_tex,<sp/>uint8_t<sp/>level<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearview(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>what,<sp/>E3DCOLOR<sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/>uint32_t<sp/>stencil);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_screen_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;h);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="class_base_texture" kindref="compound">Texture</ref><sp/>*get_backbuffer_tex();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><ref refid="class_base_texture" kindref="compound">Texture</ref><sp/>*get_secondary_backbuffer_tex();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>d3d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_TARGET_D3D_MULTI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_interface_table.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">d3d</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy_from_current_render_target(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*to_tex)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.copy_from_current_render_target(to_tex);<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_rt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;rt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_resource_clear_value" kindref="compound">ResourceClearValue</ref><sp/>&amp;clear_val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.clear_rt(rt,<sp/>clear_val);<sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.set_render_target();<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_depth(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*tex,<sp/>DepthAccess<sp/>access)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.set_depth(tex,<sp/>access);<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_depth(<ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*tex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layer,<sp/>DepthAccess<sp/>access)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.set_depth(tex,<sp/>layer,<sp/>access);<sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rt_index,<sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fc,<sp/>uint8_t<sp/>level)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.set_render_target(rt_index,<sp/>t,<sp/>fc,<sp/>level);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rt_index,<sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*t,<sp/>uint8_t<sp/>level)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.set_render_target(rt_index,<sp/>t,<sp/>level);<sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_render_target(<ref refid="struct_driver3d_render_target" kindref="compound">Driver3dRenderTarget</ref><sp/>&amp;out_rt)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.get_render_target(out_rt);<sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_render_target(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_driver3d_render_target" kindref="compound">Driver3dRenderTarget</ref><sp/>&amp;rt)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.set_render_target(rt);<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_target_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;h)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.get_target_size(w,<sp/>h);<sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_render_target_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;h,<sp/><ref refid="class_base_texture" kindref="compound">BaseTexture</ref><sp/>*rt_tex,<sp/>uint8_t<sp/>level)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.get_render_target_size(w,<sp/>h,<sp/>rt_tex,<sp/>level);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearview(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>what,<sp/>E3DCOLOR<sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/>uint32_t<sp/>stencil)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.clearview(what,<sp/>c,<sp/>z,<sp/>stencil);<sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_screen_size(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;h)<sp/>{<sp/>d3di.get_screen_size(w,<sp/>h);<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_base_texture" kindref="compound">Texture</ref><sp/>*get_backbuffer_tex()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.get_backbuffer_tex();<sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_base_texture" kindref="compound">Texture</ref><sp/>*get_secondary_backbuffer_tex()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d3di.get_secondary_backbuffer_tex();<sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>d3d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/drv/3d/dag_renderTarget.h"/>
  </compounddef>
</doxygen>
