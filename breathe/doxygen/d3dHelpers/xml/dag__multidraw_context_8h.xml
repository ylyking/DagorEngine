<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dag__multidraw_context_8h" kind="file" language="C++">
    <compoundname>dag_multidrawContext.h</compoundname>
    <includes local="no">EASTL/fixed_function.h</includes>
    <includes local="no">EASTL/optional.h</includes>
    <includes local="no">EASTL/string.h</includes>
    <includes local="no">EASTL/variant.h</includes>
    <includes local="no">3d/dag_resPtr.h</includes>
    <includes local="no">3d/dag_ringDynBuf.h</includes>
    <includes local="no">drv/3d/dag_draw.h</includes>
    <includes local="no">3d/dag_multidrawInfo.h</includes>
    <incdepgraph>
      <node id="9">
        <label>3d/dag_multidrawInfo.h</label>
      </node>
      <node id="2">
        <label>EASTL/fixed_function.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/3d/dag_multidrawContext.h</label>
        <link refid="dag__multidraw_context_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>EASTL/optional.h</label>
      </node>
      <node id="8">
        <label>drv/3d/dag_draw.h</label>
      </node>
      <node id="6">
        <label>3d/dag_resPtr.h</label>
      </node>
      <node id="5">
        <label>EASTL/variant.h</label>
      </node>
      <node id="4">
        <label>EASTL/string.h</label>
      </node>
      <node id="7">
        <label>3d/dag_ringDynBuf.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_multidraw_context" prot="public">MultidrawContext</innerclass>
    <innerclass refid="class_multidraw_context_1_1_multidraw_render_executor" prot="public">MultidrawContext::MultidrawRenderExecutor</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dag__multidraw_context_8h_1a5dd04b7fdc23337872b770ff78956348" prot="public" static="no">
        <name>USE_STAGING_MULTIDRAW_BUF</name>
        <initializer>_TARGET_XBOXONE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/3d/dag_multidrawContext.h" line="19" column="9" bodyfile="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/3d/dag_multidrawContext.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dagor<sp/>Engine<sp/>6.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Gaijin<sp/>Games<sp/>KFT.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/fixed_function.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/optional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EASTL/variant.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;3d/dag_resPtr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;3d/dag_ringDynBuf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drv/3d/dag_draw.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;3d/dag_multidrawInfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>workaround<sp/>for<sp/>OOM<sp/>on<sp/>xbox<sp/>https://youtrack.gaijin.team/issue/EEX-4827</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_STAGING_MULTIDRAW_BUF<sp/>_TARGET_XBOXONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PerDrawDataT&gt;</highlight></codeline>
<codeline lineno="27" refid="class_multidraw_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>eastl::string<sp/>name;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STAGING_MULTIDRAW_BUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>UniqueBuf<sp/>multidrawArguments;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>RingDynamicSB<sp/>multidrawArgsStagingBuffer;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>RingDynamicSB<sp/>multidrawArguments;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>UniqueBufHolder<sp/>perDrawArgsBuffer;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>uint32_t<sp/>allocatedDrawcallsInBuffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>uint32_t<sp/>actualStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>eastl::string<sp/>getPerDrawArgsBufferName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_perDrawArgsBuffer&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STAGING_MULTIDRAW_BUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>eastl::string<sp/>getMultidrawStagingBufferName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_staging&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needPerDrawParamsBuffer()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PerDrawDataT)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84" refid="class_multidraw_context_1aaeb5a10d853e44d0e917377fb320d0bd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multidraw_context_1aaeb5a10d853e44d0e917377fb320d0bd" kindref="member">MultidrawContext</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>:<sp/>name(name)<sp/>{}</highlight></codeline>
<codeline lineno="88" refid="class_multidraw_context_1ae84438bc7fd10f189b80d08a4f054b0f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multidraw_context_1ae84438bc7fd10f189b80d08a4f054b0f" kindref="member">MultidrawContext</ref>(<ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92" refid="class_multidraw_context_1ab3eb913fa9c9b8f6f313bfc068e3e7dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>&amp;<ref refid="class_multidraw_context_1ab3eb913fa9c9b8f6f313bfc068e3e7dd" kindref="member">operator=</ref>(<ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96" refid="class_multidraw_context_1ac806f166b566bca657521768973ced15" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multidraw_context_1ac806f166b566bca657521768973ced15" kindref="member">MultidrawContext</ref>(<ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100" refid="class_multidraw_context_1ad586d35be79d2ca8cd5dfcbb48ebe722" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>&amp;<ref refid="class_multidraw_context_1ad586d35be79d2ca8cd5dfcbb48ebe722" kindref="member">operator=</ref>(<ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_multidraw_context_1_1_multidraw_render_executor" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>*context;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref>(<ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref><sp/>&amp;<ref refid="class_multidraw_context_1ab3eb913fa9c9b8f6f313bfc068e3e7dd" kindref="member">operator=</ref>(<ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref>(<ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref><sp/>&amp;<ref refid="class_multidraw_context_1ab3eb913fa9c9b8f6f313bfc068e3e7dd" kindref="member">operator=</ref>(<ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129" refid="class_multidraw_context_1_1_multidraw_render_executor_1a74a1dd2d7023aa3a56e67c81901dfb11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor_1a74a1dd2d7023aa3a56e67c81901dfb11" kindref="member">MultidrawRenderExecutor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_multidraw_context" kindref="compound">MultidrawContext</ref><sp/>*context)<sp/>:<sp/>context(context)<sp/>{}</highlight></codeline>
<codeline lineno="138" refid="class_multidraw_context_1_1_multidraw_render_executor_1affbe689ead63d464c84504d64f9a9d8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor_1affbe689ead63d464c84504d64f9a9d8d" kindref="member">render</ref>(uint32_t<sp/>primitive_type,<sp/>uint32_t<sp/>first_drawcall,<sp/>uint32_t<sp/>drawcalls_count)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STAGING_MULTIDRAW_BUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d3d::multi_draw_indexed_indirect(primitive_type,<sp/>context-&gt;multidrawArguments.getBuf(),<sp/>drawcalls_count,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiDrawInfo::bytesCountPerDrawcall,<sp/>first_drawcall<sp/>*<sp/>MultiDrawInfo::bytesCountPerDrawcall);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d3d::multi_draw_indexed_indirect(primitive_type,<sp/>context-&gt;multidrawArguments.getRenderBuf(),<sp/>drawcalls_count,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiDrawInfo::bytesCountPerDrawcall,<sp/>(first_drawcall<sp/>+<sp/>context-&gt;actualStart)<sp/>*<sp/>MultiDrawInfo::bytesCountPerDrawcall);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="162" refid="class_multidraw_context_1aebaac51c0e58e5c9718e3d186eb319d3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref><sp/><ref refid="class_multidraw_context_1aebaac51c0e58e5c9718e3d186eb319d3" kindref="member">fillBuffers</ref>(uint32_t<sp/>drawcalls_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;set_cb)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>CONSTEXPR_EXT_MULTIDRAW<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extMultiDraw<sp/>=<sp/>MultiDrawInfo::usesExtendedMultiDrawStruct();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STAGING_MULTIDRAW_BUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>RingDynamicSB<sp/>&amp;multidrawArgsBuf<sp/>=<sp/>multidrawArgsStagingBuffer;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>RingDynamicSB<sp/>&amp;multidrawArgsBuf<sp/>=<sp/>multidrawArguments;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allocatedDrawcallsInBuffer<sp/>&lt;<sp/>drawcalls_count<sp/>||<sp/>!multidrawArgsBuf.getRenderBuf())</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>CHUNK_SIZE<sp/>=<sp/>2048;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>allocatedDrawcallsInBuffer<sp/>=<sp/>(drawcalls_count<sp/>+<sp/>CHUNK_SIZE<sp/>-<sp/>1)<sp/>/<sp/>CHUNK_SIZE<sp/>*<sp/>CHUNK_SIZE;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STAGING_MULTIDRAW_BUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArguments.close();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArguments<sp/>=<sp/>dag::create_sbuffer(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiDrawInfo::bytesCountPerDrawcall<sp/>*<sp/>allocatedDrawcallsInBuffer<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t),<sp/>SBCF_INDIRECT,<sp/>0,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArgsStagingBuffer.close();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArgsStagingBuffer.init(allocatedDrawcallsInBuffer,<sp/>MultiDrawInfo::bytesCountPerDrawcall,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t),<sp/>SBCF_DYNAMIC,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>getMultidrawStagingBufferName().c_str());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArguments.close();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArguments.init(allocatedDrawcallsInBuffer,<sp/>MultiDrawInfo::bytesCountPerDrawcall,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t),</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SBCF_INDIRECT<sp/>|<sp/>SBCF_DYNAMIC,<sp/>0,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needPerDrawParamsBuffer())</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perDrawArgsBuffer.close();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perDrawArgsBuffer<sp/>=<sp/>dag::create_sbuffer(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PerDrawDataT),<sp/>allocatedDrawcallsInBuffer,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SBCF_MISC_STRUCTURED<sp/>|<sp/>SBCF_BIND_SHADER_RES<sp/>|<sp/>SBCF_DYNAMIC,<sp/>0,<sp/>getPerDrawArgsBufferName().c_str());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::variant&lt;eastl::monostate,<sp/>LockedBuffer&lt;DrawIndexedIndirectArgs&gt;,<sp/>LockedBuffer&lt;ExtendedDrawIndexedIndirectArgs&gt;&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArgs;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bufferLocked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>CONSTEXPR_EXT_MULTIDRAW<sp/>(extMultiDraw)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArgs<sp/>=<sp/>multidrawArgsBuf.lockBufferAs&lt;ExtendedDrawIndexedIndirectArgs&gt;(drawcalls_count,<sp/>actualStart);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufferLocked<sp/>=<sp/>(bool)eastl::get&lt;2&gt;(multidrawArgs);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multidrawArgs<sp/>=<sp/>multidrawArgsBuf.lockBufferAs&lt;DrawIndexedIndirectArgs&gt;(drawcalls_count,<sp/>actualStart);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufferLocked<sp/>=<sp/>(bool)eastl::get&lt;1&gt;(multidrawArgs);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bufferLocked)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logerr(</highlight><highlight class="stringliteral">&quot;Buffer<sp/>%s<sp/>data<sp/>wasn&apos;t<sp/>updated.&quot;</highlight><highlight class="normal">,<sp/>multidrawArgsBuf.getRenderBuf()-&gt;getBufName());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>eastl::optional&lt;LockedBuffer&lt;PerDrawDataT&gt;&gt;<sp/>perDrawArgs;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(needPerDrawParamsBuffer())</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perDrawArgs.emplace(lock_sbuffer&lt;PerDrawDataT&gt;(perDrawArgsBuffer.getBuf(),<sp/>0,<sp/>drawcalls_count,<sp/>VBLOCK_DISCARD));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!perDrawArgs)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logerr(</highlight><highlight class="stringliteral">&quot;Buffer<sp/>%s<sp/>data<sp/>wasn&apos;t<sp/>updated.&quot;</highlight><highlight class="normal">,<sp/>perDrawArgsBuffer.getBuf()-&gt;getBufName());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>drawcalls_count;<sp/>++i)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;dc<sp/>=<sp/>extMultiDraw<sp/>?<sp/>eastl::get&lt;2&gt;(multidrawArgs)[i].args<sp/>:<sp/>eastl::get&lt;1&gt;(multidrawArgs)[i];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.startInstanceLocation<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>&amp;drawcallId<sp/>=<sp/>extMultiDraw<sp/>?<sp/>eastl::get&lt;2&gt;(multidrawArgs)[i].drawcallId<sp/>:<sp/>dc.startInstanceLocation;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PerDrawDataT<sp/>&amp;perDrawData<sp/>=<sp/>needPerDrawParamsBuffer()<sp/>?<sp/>perDrawArgs.value()[i]<sp/>:<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">PerDrawDataT<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(drawcallId);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_cb(i,<sp/>dc.indexCountPerInstance,<sp/>dc.instanceCount,<sp/>dc.startIndexLocation,<sp/>dc.baseVertexLocation,<sp/>perDrawData);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(needPerDrawParamsBuffer())</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawcallId<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STAGING_MULTIDRAW_BUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>extMultiDraw<sp/>?<sp/>eastl::get&lt;2&gt;(multidrawArgs).close()<sp/>:<sp/>eastl::get&lt;1&gt;(multidrawArgs).close();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>multidrawArgsStagingBuffer.getRenderBuf()-&gt;copyTo(multidrawArguments.getBuf(),<sp/>0,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actualStart<sp/>*<sp/>MultiDrawInfo::bytesCountPerDrawcall,<sp/>drawcalls_count<sp/>*<sp/>MultiDrawInfo::bytesCountPerDrawcall);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_multidraw_context_1_1_multidraw_render_executor" kindref="compound">MultidrawRenderExecutor</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246" refid="class_multidraw_context_1aea80f7ee14258eb0b126566533d3f234" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_multidraw_context_1aea80f7ee14258eb0b126566533d3f234" kindref="member">close</ref>()</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>multidrawArguments.close();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_STAGING_MULTIDRAW_BUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>multidrawArgsStagingBuffer.close();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>perDrawArgsBuffer.close();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatedDrawcallsInBuffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CONSTEXPR_EXT_MULTIDRAW</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/DagorEngine/DagorEngine/prog/dagorInclude/3d/dag_multidrawContext.h"/>
  </compounddef>
</doxygen>
